{"name": "test_login[locked_out_user-secret_sauce]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\n  (Session info: chrome=128.0.6613.138); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x00000001045a5208 cxxbridge1$str$ptr + 1927396\n1   chromedriver                        0x000000010459d66c cxxbridge1$str$ptr + 1895752\n2   chromedriver                        0x0000000104198808 cxxbridge1$string$len + 89564\n3   chromedriver                        0x00000001041dcbcc cxxbridge1$string$len + 369056\n4   chromedriver                        0x0000000104216228 cxxbridge1$string$len + 604156\n5   chromedriver                        0x00000001041d1698 cxxbridge1$string$len + 322668\n6   chromedriver                        0x00000001041d2310 cxxbridge1$string$len + 325860\n7   chromedriver                        0x000000010456be78 cxxbridge1$str$ptr + 1693012\n8   chromedriver                        0x000000010457077c cxxbridge1$str$ptr + 1711704\n9   chromedriver                        0x00000001045513ec cxxbridge1$str$ptr + 1583816\n10  chromedriver                        0x000000010457104c cxxbridge1$str$ptr + 1713960\n11  chromedriver                        0x0000000104541fc8 cxxbridge1$str$ptr + 1521316\n12  chromedriver                        0x000000010458eb68 cxxbridge1$str$ptr + 1835588\n13  chromedriver                        0x000000010458ece4 cxxbridge1$str$ptr + 1835968\n14  chromedriver                        0x000000010459d308 cxxbridge1$str$ptr + 1894884\n15  libsystem_pthread.dylib             0x000000018c5fd034 _pthread_start + 136\n16  libsystem_pthread.dylib             0x000000018c5f7e3c thread_start + 8", "trace": "username = 'locked_out_user', password = 'secret_sauce'\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2cbfffaabed51546b23ded6a40c0dac4\")>\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),  # Valid credentials\n        (\"locked_out_user\", \"secret_sauce\"),  # Locked-out user\n        (\"invalid_user\", \"wrong_password\")  # Invalid credentials\n    ])\n    def test_login(username, password, browser):\n        login_page = LoginPage(browser)\n        home_page = HomePage(browser)\n    \n>       login_page.login(username, password)\n\nTestCases/test_login.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/LoginPage.py:33: in login\n    self.enter_username(username)\nPages/LoginPage.py:19: in enter_username\n    self.driver.find_element(*self.username_field).clear()\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1064c8b20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018c5fd034 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x000000018c5f7e3c thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"user-name\"]\"}\nE         (Session info: chrome=128.0.6613.138); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x00000001045a5208 cxxbridge1$str$ptr + 1927396\nE       1   chromedriver                        0x000000010459d66c cxxbridge1$str$ptr + 1895752\nE       2   chromedriver                        0x0000000104198808 cxxbridge1$string$len + 89564\nE       3   chromedriver                        0x00000001041dcbcc cxxbridge1$string$len + 369056\nE       4   chromedriver                        0x0000000104216228 cxxbridge1$string$len + 604156\nE       5   chromedriver                        0x00000001041d1698 cxxbridge1$string$len + 322668\nE       6   chromedriver                        0x00000001041d2310 cxxbridge1$string$len + 325860\nE       7   chromedriver                        0x000000010456be78 cxxbridge1$str$ptr + 1693012\nE       8   chromedriver                        0x000000010457077c cxxbridge1$str$ptr + 1711704\nE       9   chromedriver                        0x00000001045513ec cxxbridge1$str$ptr + 1583816\nE       10  chromedriver                        0x000000010457104c cxxbridge1$str$ptr + 1713960\nE       11  chromedriver                        0x0000000104541fc8 cxxbridge1$str$ptr + 1521316\nE       12  chromedriver                        0x000000010458eb68 cxxbridge1$str$ptr + 1835588\nE       13  chromedriver                        0x000000010458ece4 cxxbridge1$str$ptr + 1835968\nE       14  chromedriver                        0x000000010459d308 cxxbridge1$str$ptr + 1894884\nE       15  libsystem_pthread.dylib             0x000000018c5fd034 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x000000018c5f7e3c thread_start + 8\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "parameters": [{"name": "username", "value": "'locked_out_user'"}, {"name": "password", "value": "'secret_sauce'"}], "start": 1726498192131, "stop": 1726498202193, "uuid": "73bf8ae5-bffc-497d-8801-ca44d89b71aa", "historyId": "4bc5587a7328e9c0d1f36b83121b9310", "testCaseId": "96bea9459c71e2d0f628fa02f717d424", "fullName": "TestCases.test_login#test_login", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "unaiss-MacBook-Air.local"}, {"name": "thread", "value": "58796-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_login"}]}